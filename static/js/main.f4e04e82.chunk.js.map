{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","_ref","OnRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","paddingRight","className","onClick","Logo","tilt_default","options","max","height","width","paddingTop","src","alt","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","htmlFor","type","name","onChange","React","Component","Register","onNameChange","ImageLinkForm","onInputChange","OnButtonSubmit","Rank","entries","concat","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","data","joined","displayFaceBox","calculateFaceLocation","clarifaiFaceBox","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","input","models","predict","FACE_DETECT_MODEL","res","count","assign","catch","err","console","log","route","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4e04e82.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Navigation = ({ OnRouteChange, isSignedIn }) => {\n    if(isSignedIn){\n        return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end', paddingRight: '20px'}}>\n                <p className='f3 link dim white underline pa3 pointer' \n                    onClick={() => OnRouteChange('signout')}> \n                    Sign Out\n                </p>\n            </nav>\n        );\n    }\n    else{\n        return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end', paddingRight: '20px'}}>\n                <p className='f3 link dim white underline pa3 pointer' \n                    onClick={() => OnRouteChange('signin')}> \n                    Sign In\n                </p>\n                <p className='f3 link dim white underline pa3 pointer' \n                    onClick={() => OnRouteChange('register')}> \n                    Register\n                </p>\n            </nav>\n        );\n    }\n      \n        \n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css'\n//import brain from './brain.png';\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4\">\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\"> \n                    <img style={{paddingTop: '2px', width: '150px', height: 'auto'}} src=\"http://hanatemplate.com/images/winking-face-gif-1.gif\" alt=\"logo\"/> \n                </div>\n            </Tilt>\n        </div>\n    );\n}\n\nexport default Logo;","import React from 'react';\n\nclass SignIn extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value});\n    }\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value});\n    }\n    onSubmitSignIn = () => {\n        fetch('http://localhost:3000/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })//post request\n        .then(response => response.json())\n        .then(user => {\n            if(user.id){\n                this.props.loadUser(user);\n                this.props.OnRouteChange('home');\n            }\n        });      \n    }\n\n    render() {\n        const  { OnRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba shadow-5 dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                       type=\"email\" \n                                       name=\"email-address\"  \n                                       id=\"email-address\" \n                                       onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                       type=\"password\" \n                                       name=\"password\"  \n                                       id=\"password\" \n                                       onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \n                                   type=\"submit\" \n                                   value=\"Sign in\" \n                                   onClick={this.onSubmitSignIn}\n                            />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={()=>OnRouteChange('register')} className=\"f5 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>    \n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: '',\n        }\n    }   \n\n    onNameChange = (event) => {\n        this.setState({name: event.target.value});\n    }\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value});\n    }\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value});\n    }\n    onSubmitSignIn = () => {\n        fetch('http://localhost:3000/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })//post request\n        .then(response => response.json())\n        .then(user => {\n            if(user){\n                this.props.loadUser(user);\n                this.props.OnRouteChange('home');\n            }           \n        });      \n    }\n\n    render(){\n        return (\n            <article className=\"br3 ba shadow-5 dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Name</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                       type=\"text\" \n                                       name=\"name\"  \n                                       id=\"name\" \n                                       onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                       type=\"email\" \n                                       name=\"email-address\"  \n                                       id=\"email-address\" \n                                       onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                       type=\"password\" \n                                       name=\"password\"  \n                                       id=\"password\"\n                                       onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \n                                   type=\"submit\" \n                                   value=\"Register\" \n                                   onClick={this.onSubmitSignIn}\n                            />\n                        </div>\n                    </div>\n                </main>\n            </article>    \n        );\n    }\n    \n}\n\nexport default Register;","import React from 'react';\nimport './ImageLinkForm.css';\n\n\nconst ImageLinkForm = ({ onInputChange, OnButtonSubmit }) => {\n    return (\n        <div>\n           <p className='f3 white b'>This app will detect faces in your images. Paste any link to an image below.</p>\n           <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' \n                           type='text' \n                           onChange={onInputChange}>\n                    </input>\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' \n                            onClick={OnButtonSubmit}> \n                            Detect\n                    </button>\n                </div>\n           </div>\n        </div>\n    );\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className='white f3'>\n                {`${name}, your current entry count is...`}\n            </div>\n            <div className='white f1 ma0'>\n                {entries}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                <img id='inputimage' src={imageUrl} alt=\"\" width='500px' height='auto'/>\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\n\n // Instantiate a new Clarifai app by passing in your API key.\nconst app = new Clarifai.App({apiKey: 'f25a16fb782a48a397cdca16d0574832'});\n\nconst particlesOptions = {\n  particles: {\n   number:{\n     value: 100,\n     density: {\n      enable: true,\n      value_area: 700\n     }\n   }\n  }            \n}\n\nclass App extends Component {\n  constructor(){\n\t\tsuper();\n\t\tthis.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n\t\t}\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3000')\n  //   .then(response => response.json())\n  //   .then(console.log)\n  // }\n  \n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  calculateFaceLocation = (response) => {\n    const clarifaiFaceBox = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFaceBox.left_col * width,\n      topRow: clarifaiFaceBox.top_row * height,\n      rightCol: width - (clarifaiFaceBox.right_col * width),\n      bottomRow : height - (clarifaiFaceBox.bottom_row * height)\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  OnButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    // Predict the contents of an image by passing in a URL.\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id,\n            })\n          }).then(res => res.json())\n            .then(count => {\n                this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  OnRouteChange = (route) => {\n    if(route==='home'){\n      this.setState({isSignedIn: true});\n    }else{\n      this.setState({isSignedIn: false});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation OnRouteChange={this.OnRouteChange} isSignedIn={this.state.isSignedIn}/>\n        {\n          this.state.route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name}  entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} OnButtonSubmit={this.OnButtonSubmit}/>\n              <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/> \n            </div> \n          : (this.state.route === 'signin' || this.state.route === 'signout' \n            ? <SignIn loadUser={this.loadUser} OnRouteChange={this.OnRouteChange}/>\n            : <Register loadUser={this.loadUser} OnRouteChange={this.OnRouteChange}/>\n            )  \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}