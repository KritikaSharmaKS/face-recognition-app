{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","_ref","OnRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","paddingRight","className","onClick","Logo","tilt_default","options","max","height","width","paddingTop","src","alt","SignIn","id","htmlFor","type","name","value","Register","ImageLinkForm","onInputChange","OnButtonSubmit","onChange","Rank","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayFaceBox","setState","calculateFaceLocation","response","clarifaiFaceBox","outputs","data","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","catch","err","console","log","route","fetch","json","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d88a4e6.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Navigation = ({ OnRouteChange, isSignedIn }) => {\n    if(isSignedIn){\n        return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end', paddingRight: '20px'}}>\n                <p className='f3 link dim white underline pa3 pointer' \n                    onClick={() => OnRouteChange('signout')}> \n                    Sign Out\n                </p>\n            </nav>\n        );\n    }\n    else{\n        return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end', paddingRight: '20px'}}>\n                <p className='f3 link dim white underline pa3 pointer' \n                    onClick={() => OnRouteChange('signin')}> \n                    Sign In\n                </p>\n                <p className='f3 link dim white underline pa3 pointer' \n                    onClick={() => OnRouteChange('register')}> \n                    Register\n                </p>\n            </nav>\n        );\n    }\n      \n        \n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css'\n//import brain from './brain.png';\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4\">\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\"> \n                    <img style={{paddingTop: '2px', width: '150px', height: 'auto'}} src=\"http://hanatemplate.com/images/winking-face-gif-1.gif\" alt=\"logo\"/> \n                </div>\n            </Tilt>\n        </div>\n    );\n}\n\nexport default Logo;","import React from 'react';\n\nconst SignIn = ({ OnRouteChange }) => {\n    return (\n        <article className=\"br3 ba shadow-5 dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n            <main className=\"pa4 black-80\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \n                               type=\"submit\" \n                               value=\"Sign in\" \n                               onClick={()=>OnRouteChange('home')}\n                        />\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                        <p onClick={()=>OnRouteChange('register')} className=\"f5 link dim black db pointer\">Register</p>\n                    </div>\n                </div>\n            </main>\n        </article>    \n    );\n}\n\nexport default SignIn;","import React from 'react';\n\nconst Register = ({ OnRouteChange }) => {\n    return (\n        <article className=\"br3 ba shadow-5 dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n            <main className=\"pa4 black-80\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Name</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \n                               type=\"submit\" \n                               value=\"Register\" \n                               onClick={()=>OnRouteChange('home')}\n                        />\n                    </div>\n                </div>\n            </main>\n        </article>    \n    );\n}\n\nexport default Register;","import React from 'react';\nimport './ImageLinkForm.css';\n\n\nconst ImageLinkForm = ({ onInputChange, OnButtonSubmit }) => {\n    return (\n        <div>\n           <p className='f3 white b'>This app will detect faces in your images. Paste any link to an image below.</p>\n           <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' \n                           type='text' \n                           onChange={onInputChange}>\n                    </input>\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' \n                            onClick={OnButtonSubmit}> \n                            Detect\n                    </button>\n                </div>\n           </div>\n        </div>\n    );\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = () => {\n    return (\n        <div>\n            <div className='white f3'>\n                KS, your rank is...\n            </div>\n            <div className='white f1 ma0'>\n                #1\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                <img id='inputimage' src={imageUrl} alt=\"\" width='500px' height='auto'/>\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\n\n // Instantiate a new Clarifai app by passing in your API key.\nconst app = new Clarifai.App({apiKey: 'f25a16fb782a48a397cdca16d0574832'});\n\nconst particlesOptions = {\n  particles: {\n   number:{\n     value: 100,\n     density: {\n      enable: true,\n      value_area: 700\n     }\n   }\n  }            \n}\n\nclass App extends Component {\n  constructor(){\n\t\tsuper();\n\t\tthis.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n\t\t}\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log)\n  }\n  \n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  calculateFaceLocation = (response) => {\n    const clarifaiFaceBox = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFaceBox.left_col * width,\n      topRow: clarifaiFaceBox.top_row * height,\n      rightCol: width - (clarifaiFaceBox.right_col * width),\n      bottomRow : height - (clarifaiFaceBox.bottom_row * height)\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  OnButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    // Predict the contents of an image by passing in a URL.\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  OnRouteChange = (route) => {\n    if(route==='home'){\n      this.setState({isSignedIn: true});\n    }else{\n      this.setState({isSignedIn: false});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation OnRouteChange={this.OnRouteChange} isSignedIn={this.state.isSignedIn}/>\n        {\n          this.state.route === 'home' \n          ? <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm onInputChange={this.onInputChange} OnButtonSubmit={this.OnButtonSubmit}/>\n              <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/> \n            </div> \n          : (this.state.route === 'signin' || this.state.route === 'signout' \n            ? <SignIn OnRouteChange={this.OnRouteChange}/>\n            : <Register OnRouteChange={this.OnRouteChange}/>\n            )  \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}